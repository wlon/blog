{"componentChunkName":"component---src-templates-blog-post-js","path":"/ruby/2012-01-06-deploy-rails-on-windows/","result":{"data":{"site":{"siteMetadata":{"title":"Wlon X Blog"}},"markdownRemark":{"id":"2a7ffb41-1510-5230-9000-0944aea2b636","excerpt":"转自 kloboHYZ 由于 mongrel 已经年久失修、不支持最新的 1.9.2 版本了、所以现在使用 thin 作为 rails 服务器、再加上 nginx 作反向代理、\n首先安装 thin 吧、在 windows 平台下、需要先安装 eventmachine、否则不能安装 thin…","html":"<h3>转自</h3>\n<p><a href=\"http://www.cnblogs.com/klobohyz/archive/2011/12/27/2303450.html\">kloboHYZ</a></p>\n<p>由于 mongrel 已经年久失修、不支持最新的 1.9.2 版本了、所以现在使用 thin 作为 rails 服务器、再加上 nginx 作反向代理、\n首先安装 thin 吧、在 windows 平台下、需要先安装 eventmachine、否则不能安装 thin 服务器</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gem install eventmachine --pre\ngem install thin</code></pre></div>\n<p>安装完成后只需要在 rails 的项目目录上输入 thin start 就可以启动 thin 服务器了、</p>\n<p>P.S.:有时候启动 thin 的时候会遇到这种错误、You have already activated rack 1.3.0, but your Gemfile requires rack 1.2.3.\n这是因为迩安装了多个 rack 版本、环境造成混乱、请卸载掉不需要的版本或者修改了 Gemfile 再执行一次 bundle install</p>\n<p>接着莪们配置一下 nginx 吧、首先去 nginx 的官网找来 nginx 的 windows 版本、传送门：<a href=\"http://wiki.nginx.org/Install%E3%80%81%E4%B8%8B%E8%BD%BD%E5%AE%8C%E6%88%90%E5%90%8E%E8%A7%A3%E5%8E%8B%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E4%BA%86%E3%80%81%E8%BF%9B%E5%85%A5nginx%E7%9A%84conf%E7%9B%AE%E5%BD%95%E3%80%81%E6%89%93%E5%BC%80nginx.conf%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E4%BB%A5%E4%B8%8B%E9%85%8D%E7%BD%AE%E3%80%81\">http://wiki.nginx.org/Install、下载完成后解压就可以使用了、进入nginx的conf目录、打开nginx.conf文件进行以下配置、</a></p>\n<p>{% highlight Nginx config files %}\nworker<em>processes 1;\nerror</em>log C:/StandAlone/nginx/logs/error.log;\nevents {\nworker<em>connections 1024;\n}\nhttp {\ninclude mime.types;\ndefault</em>type application/octet-stream;\nlog<em>format main ‘$remote</em>addr - $remote<em>user [$time</em>local] “$request” ’\n‘$status $body<em>bytes</em>sent “$http<em>referer” ’\n’“$http</em>user<em>agent” “$http</em>x<em>forwarded</em>for”‘;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> sendfile        on;\n #keepalive_timeout  0;\n keepalive_timeout  65;\n #gzip  on;\n include C:/StandAlone/nginx/sites_enabled/*.txt;</code></pre></div>\n<p>}\n{% endhighlight %}</p>\n<p>注意 error<em>log、include 一定要切换成迩自己的实际目录、其中 include 狠重要、这个意思是从这个目录时加载其它外部配置、按着配置文件、莪们在 nginx 目录下新建 sites</em>enabled 文件夹吧、接下来在里面建立 mystandaloneapp.com.txt 文件、输入以下内容</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">upstream mystandaloneapp {\n     server 127.0.0.1:3000;\n }\n\n server {\n     listen       80;\n     server_name  localhost;\n     #charset koi8-r;\n\n     access_log C:/StandAlone/www/mystandaloneapp.com/log/access.log;\n     error_log  C:/StandAlone/www/mystandaloneapp.com/log/error.log;\n     root       C:/StandAlone/www/mystandaloneapp.com;\n     index      index.html;\n\n     location / {\n         proxy_set_header  X-Real-IP  $remote_addr;\n         proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;\n         proxy_set_header  Host $http_host;\n         proxy_redirect    off;\n         try_files C:/StandAlone/www/maintenance.html $uri $uri/index.html $uri.html @ruby;\n     }\n\n     location @ruby {\n         proxy_pass http://mystandaloneapp;\n     }\n }</code></pre></div>\n<p>这里的配置就是把 thin 的 3000 端口转化成正常的 80 端口、、注意目录都要填写迩的实际目录、然后运行 nginx 命令便可以成功运行了</p>\n<p>Nginx 的命令</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nginx -s [ stop | quit | reopen | reload ]</code></pre></div>","frontmatter":{"title":"Deploy rails on windows","date":"January 06, 2012","description":""}}},"pageContext":{"slug":"/ruby/2012-01-06-deploy-rails-on-windows/","previous":null,"next":{"fields":{"slug":"/ruby/2012-03-22-asp-dot-net-mvc-get-current-url-controller-action/"},"frontmatter":{"title":"ASP.NET MVC 中获得当前的URL、Controller、Action"}}}},"staticQueryHashes":["2955840356","3316101980"]}
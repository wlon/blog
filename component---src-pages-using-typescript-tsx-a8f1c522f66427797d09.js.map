{"version":3,"file":"component---src-pages-using-typescript-tsx-a8f1c522f66427797d09.js","mappings":"2LAaA,MA+BaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAjCwDC,IAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACDH,EAAA,OACCH,EAAAA,cAACO,EAAAA,EAAM,CAACL,MAAM,mBAAmBI,SAAUA,GACzCN,EAAAA,cAAA,UAAI,0CACJA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,YAAa,+DACdA,EAAAA,cAAA,UAAI,eAAgB,wEAGlEA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,cAAe,oBACxDA,EAAAA,cAAA,UAAI,cAAe,gBAAaA,EAAAA,cAAA,UAAI,YAAa,UAEvDA,EAAAA,cAAA,SAAG,kCAC8BK,EAAK,uBAAqB,IACxDD,EAAKI,KAAKC,UAAU,KAEvBT,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+CCNX,IAhCeT,IAAoC,IAAnC,SAAEG,EAAQ,MAAEJ,EAAK,SAAEW,GAAUV,EAC3C,MACMW,EADW,MACER,EAASS,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEAd,EAAAA,cAAA,MAAIiB,UAAU,gBACZjB,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAKV,IAKhBF,EAAAA,cAACW,EAAAA,KAAI,CAACM,UAAU,mBAAmBL,GAAG,KACnCV,GAMLF,EAAAA,cAAA,OAAKiB,UAAU,iBAAiB,oBAAmBH,GACjDd,EAAAA,cAAA,UAAQiB,UAAU,iBAAiBD,GACnChB,EAAAA,cAAA,YAAOa,GACPb,EAAAA,cAAA,cAAQ,MACH,IAAIkB,MAAOC,cAAc,eAC3B,IACDnB,EAAAA,cAAA,KAAGU,KAAK,4BAA2B,WAEjC,C,+CCpBV,MAAMT,EAAME,IAA6C,IAADiB,EAAAC,EAAAC,EAAA,IAA3C,YAAEC,EAAW,KAAEC,EAAI,MAAEtB,EAAK,SAAEW,GAAUV,EACjD,MAAM,KAAEK,IAASiB,EAAAA,EAAAA,gBAAe,cAiB1BC,EAAkBH,GAAef,EAAKmB,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGZ,EAAKmB,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBlB,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ4B,EAAe,GAAG1B,OAAW0B,IAAiB1B,GACtDF,EAAAA,cAAA,QAAM6B,KAAK,cAAcC,QAASJ,IAClC1B,EAAAA,cAAA,QAAM+B,SAAS,WAAWD,QAAS5B,IACnCF,EAAAA,cAAA,QAAM+B,SAAS,iBAAiBD,QAASJ,IACzC1B,EAAAA,cAAA,QAAM+B,SAAS,UAAUD,QAAQ,YACjC9B,EAAAA,cAAA,QAAM6B,KAAK,eAAeC,QAAQ,YAClC9B,EAAAA,cAAA,QACE6B,KAAK,kBACLC,SAA0B,QAAjBT,EAAAb,EAAKmB,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAW,KAEjDjC,EAAAA,cAAA,QAAM6B,KAAK,gBAAgBC,QAAS5B,IACpCF,EAAAA,cAAA,QAAM6B,KAAK,sBAAsBC,QAASJ,IACzCb,EACA,EAIPZ,EAAIiC,aAAe,CACjBX,YAAa,IAQf,K","sources":["webpack://x-blog/./src/pages/using-typescript.tsx","webpack://x-blog/./src/components/layout.js","webpack://x-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n              weibo\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","children","isRootPath","pathname","header","className","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps"],"sourceRoot":""}